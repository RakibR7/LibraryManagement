name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "CICD_Workflow" ]
  pull_request:
    branches: [ "main", "CICD_Workflow" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out source
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build + test each microservice
      # (LibraryManagement, LibraryHub, LibraryAdvisor),
      # each in its own directory if they're separated.

      - name: Build & Test LibraryManagement
        working-directory: ./LibraryManagement
        run: mvn clean package

      - name: Build & Test LibraryHub
        working-directory: ./LibraryHub
        run: mvn clean package

      - name: Build & Test LibraryAdvisor
        working-directory: ./LibraryAdvisor
        run: mvn clean package

  # We can define another job to build Docker images and push them to a registry
  docker-publish:
    needs: [build-and-test]
    runs-on: ubuntu-latest

    steps:
      - name: Check out source
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image for LibraryManagement
        working-directory: ./LibraryManagement
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/librarymanagement:latest .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/librarymanagement:latest ${{ secrets.DOCKERHUB_USERNAME }}/librarymanagement:${{ github.run_number }}

      - name: Push LibraryManagement Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/librarymanagement:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/librarymanagement:${{ github.run_number }}

      - name: Build Docker Image for LibraryHub
        working-directory: ./LibraryHub
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/libraryhub:latest .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/libraryhub:latest ${{ secrets.DOCKERHUB_USERNAME }}/libraryhub:${{ github.run_number }}

      - name: Push LibraryHub Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/libraryhub:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/libraryhub:${{ github.run_number }}

      - name: Build Docker Image for LibraryAdvisor
        working-directory: ./LibraryAdvisor
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/libraryadvisor:latest .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/libraryadvisor:latest ${{ secrets.DOCKERHUB_USERNAME }}/libraryadvisor:${{ github.run_number }}

      - name: Push LibraryAdvisor Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/libraryadvisor:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/libraryadvisor:${{ github.run_number }}

  # Optional: A job that deploys to some environment (e.g., ECS, Docker Swarm, or Kubernetes)
  # This can be as simple or complex as your environment demands.
  # Example: deploying to a Docker Swarm or updating docker-compose on a remote host.
  deploy:
    needs: [docker-publish]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy placeholder
        run: echo "Deploy step would go here (K8s apply, SSH, etc.)"
